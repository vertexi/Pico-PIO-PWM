.program pwm
.side_set 1 opt

; autopull enable

.wrap_target
public begin:
    out y, 16               ; period value
    out x, 16               ; duty value
public switch:
    jmp x!=y, low           ; if x == y then set pin high, else set low
    jmp high        side 1  ; x == y, so set pin high
public high:
    nop                     ; single dummy cycle to keep the two paths the same length
    jmp y--, high   side 1  ; set pin high, until y hits 0
    jmp begin
public low:
    jmp y--, switch side 0  ; set pin low and count down
.wrap

% c-sdk {
#include "hardware/gpio.h"
static inline void pwm_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
    pio_sm_config c = pwm_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, pin);

    // out shift to right, auto-pull enable, 32 bit threshold for auto-pull
    sm_config_set_out_shift(&c, true, true, 32);

    float div = 1.0f;
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
}
%}
